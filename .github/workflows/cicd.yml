name: Deploy to AWS ECS

on:
  push:
    branches:
      - main
  workflow_dispatch:  # For manual execution while testing cicd

env:
  AWS_REGION: us-east-1
  ECR_REPO_ID: pass
  ECS_CLUSTER_NAME: pass
  ECS_SERVICE_NAME: pass

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r requirements-test.txt

      - name: Run tests with pytest
        run: |
          pytest

  deploy:
    runs-on: ubuntu-latest

    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Build Docker image
        run: |
          docker build --target main -t prediction-app:latest .
          docker tag prediction-app:latest ${{ env.ECR_REPO_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/prediction-app:latest

      - name: Login to Amazon ECR
        run: aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REPO_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Push Docker image to ECR
        run: docker push ${{ env.ECR_REPO_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/prediction-app:latest

      - name: Deploy to ECS
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER_NAME }} --service ${{ env.ECS_SERVICE_NAME }} --force-new-deployment
